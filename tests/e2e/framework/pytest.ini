[tool:pytest]
# MPU-6050 Test Framework pytest Configuration

# Test discovery
testpaths = ../
python_files = test_*.py *_test.py test_framework.py
python_classes = Test* *Test
python_functions = test_*

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --maxfail=5
    --show-capture=no
    --html=../../../test-results/e2e/reports/pytest_report.html
    --self-contained-html
    --cov=../../../drivers
    --cov-report=term-missing
    --cov-report=html:../../../test-results/e2e/coverage/html
    --cov-report=xml:../../../test-results/e2e/coverage/coverage.xml
    --cov-config=pytest.ini
    --junit-xml=../../../test-results/e2e/reports/junit_results.xml

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    smoke: Smoke tests
    stress: Stress and load tests
    performance: Performance tests
    slow: Slow tests (may take more than 30 seconds)
    fast: Fast tests (should complete in under 5 seconds)
    hardware: Tests requiring actual hardware
    simulation: Tests using simulated hardware
    critical: Critical functionality tests
    regression: Regression tests
    security: Security-related tests
    memory: Memory usage tests
    concurrent: Concurrency tests
    stability: Long-duration stability tests
    module_loading: Kernel module loading tests
    device_node: Device node tests
    ioctl: IOCTL command tests
    data_validation: Data validation tests
    error_handling: Error condition tests
    cleanup: Cleanup and teardown tests

# Test timeout (in seconds)
timeout = 300
timeout_method = thread

# Minimum Python version
minversion = 3.7

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:matplotlib.*
    ignore::RuntimeWarning:numpy.*
    error::UserWarning:test.*

# Coverage configuration
[coverage:run]
source = ../../../drivers/
omit = 
    */test_*
    */tests/*
    */venv/*
    */.venv/*
    */build/*
    */dist/*
    */__pycache__/*

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods
    @(abc\.)?abstractmethod

# Report precision
precision = 2

# Show missing lines
show_missing = True

# Skip covered files
skip_covered = False

# Sort results
sort = Cover

[coverage:html]
directory = ../../../test-results/e2e/coverage/html
title = MPU-6050 Driver Test Coverage

[coverage:xml]
output = ../../../test-results/e2e/coverage/coverage.xml